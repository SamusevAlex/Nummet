<?php
require_once '../Source/SQL/SqlConnectNumMet.php';
require_once '../Source/Generators/FirstTaskDataGen.php';
require_once '../Source/Generators/SecondTaskDataGen.php';
require_once '../Source/Generators/ThirdTaskDataGen.php';
require_once '../Source/Generators/FouthTaskDataGen.php';
require_once '../Source/Generators/FifthTaskDataGen.php';
require_once '../Source/Generators/SixthTaskDataGen.php';
require_once '../Source/Solvers/FirstTaskSolver.php';
require_once '../Source/Solvers/SecondTaskSolver.php';
require_once '../Source/Solvers/ThirdTaskSolver.php';
require_once '../Source/Solvers/FourthTaskSolver.php';
require_once '../Source/Solvers/FifthTaskSolver.php';
require_once '../Source/Solvers/SixthTaskSolver.php';
require_once '../Source/SQL/SqlConnectNumMet.php';
require_once '../Source/SomeFunctions.php';
require_once '../Source/Registration.php';
mb_internal_encoding("UTF-8");
define(HOST, "localhost");
define(USER, "root");
define(PASSWORD, "");
define(DB, "NumMet");
$connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
if ($connect->checkUserLogin($_COOKIE['login'], $_COOKIE['password'], "users")) {
    $isLogin = true;
} else {
    $isLogin = false;
}
$login = $_COOKIE["login"];
?>
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>Test</title>
        <link rel="stylesheet" type="text/css" href="../Source/test.css">
        <?php
        if ($isLogin) {
            echo '<script>var scrollStart = ' . 100 . ';</script>' . PHP_EOL;
        } else {
            echo '<script>var scrollStart = ' . 310 . ';</script>' . PHP_EOL;
        }
        ?>
        <script type="text/javascript" src="../Source/js/jquery.min.js" charset="utf-8"></script>
        <script type="text/javascript" src="../Source/js/menu.js" charset="utf-8"></script>
    </head>
    <body>
        <div id="mid">
            <div id="header" class="obox">
                <h1>РГР. Чисельні методи</h1>
            </div>
            <div id="links">
                <div id="searchMid">
                    <div id="search" class="obox">
                        <?php if (!$isLogin) { ?>
                            <h2 class="heading">Авторизація</h2>
                            <div class="content">
                                <form action="Login.php" method="POST" enctype='multipart/form-data'>
                                    <div><label class="task" for="login">Логін</label><input type="text" id="login" name="login" required></div>
                                    <div><label class="task" for="pass">Пароль</label><input type="password" id="pass" name="password" required></div>
                                    <input type="hidden" name="submit" value="true">
                                    <input type="submit" id="submit1" value="Ввійти">
                                </form>
                            </div>
                        <?php } else { ?>
                            <a href="profile.php">Профіль</a> / <a href="logout.php">Вийти</a>
                        <?php } ?>
                    </div>
                </div>
                <div id="menu" class="default">
                    <div id="categories" class="obox">
                        <h2 class="heading">Меню</h2>
                        <div class="content">
                            <ul>
                                <li><h3><a href="index.php">Головна сторінка</a></h3></li>
                                <?php if ($isLogin) { ?>
                                    <li><h3><a href="profile.php">Сторінка профілю</a></h3></li>
                                    <li><h3><a href="changeUserData.php">Змінити профіль</a></h3></li>
                                <?php } else { ?>
                                    <li><h3><a href="login.php">Ввійти</a></h3></li>
                                    <li><h3><a href="Registration.php">Зареєструватися</a></h3></li>
                                <?php } ?>
                                <?php if (!$connect->isUserAdmin($login, "users")) { ?>
                                    <li><h3><a href="outTask/outTask.php">Вивести завдання</a></h3></li>
                                    <li><a href="outTask/firstTask.php">Завдання 1</a></li>
                                    <li><a href="outTask/secondTask.php">Завдання 2</a></li>
                                    <li><a href="outTask/thirdTask.php">Завдання 3</a></li>
                                    <li><a href="outTask/fouthTask.php">Завдання 4</a></li>
                                    <li><a href="outTask/fifthTask.php">Завдання 5</a></li>
                                    <li><a href="outTask/sixthTask.php">Завдання 6</a></li>
                                    <li><h3><a href="inTask/inTask.php">Ввести відповідь</a></h3></li>
                                    <li><a href="inTask/firstTask.php">Завдання 1</a></li>
                                    <li><a href="inTask/secondTask.php">Завдання 2</a></li>
                                    <li><a href="inTask/thirdTask.php">Завдання 3</a></li>
                                    <li><a href="inTask/fouthTask.php">Завдання 4</a></li>
                                    <li><a href="inTask/fifthTask.php">Завдання 5</a></li>
                                    <li><a href="inTask/sixthTask.php">Завдання 6</a></li>
                                <?php } else { ?>
                                    <li><h3><a href="adminPages/admin.php">Адміністрування</a></h3></li>
                                    <li><a href="adminPages/taskCheck.php">Перевірити завдання</a></li>
                                    <li><a href="adminPages/addFunction.php">Додати функцію</a></li>
                                    <li><a href="adminPages/deleteFunctionTask.php">Видалити функцію</a></li>
                                    <li><a href="adminPages/regGroup.php">Зареєструвати групу</a></li>
                                    <li><a href="adminPages/deleteGroup.php">Видалити групу</a></li>
                                    <li><a href="adminPages/createNewAdmin.php">Новий адміністратор</a></li>
                                    <?php
                                    if ($reg = $connect->checkRegistration("setings")) {
                                        echo '<li><a href="adminPages/changeReg.php">Закрити реєстрацію</a></li>';
                                    } else {
                                        echo '<a href="adminPages/changeReg.php">Відкрити реєстрацію</a></li>';
                                    }
                                    ?>
                                    <li><a href=""></a></li>
                                <?php } ?>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div id="posts">
                <div class="post">
                    <div class="story">
                        Иногда меня попрекают тем, что я много знаю. «Стивен, — говорят мне с укоризной, — ты много знаешь». Ага, все равно что сказать человеку, к которому прилипла пара песчинок, что он весь в песке. Если представить себе все то огромнейшее количество песка, что существует в мире, такого человека, в сущности, можно считать беспесочником. Мы все беспесочники. Мы все невежды. Вокруг столько пляжей, пустынь и дюн знаний, о существовании которых мы даже не догадываемся, — не говоря уже о том, чтобы там побывать!
                        Сказать вам, друзья, кого нам надо остерегаться больше всего? Тех, кто считает, что они знают все, что положено знать. «Все объясняется в этом тексте, — говорят они нам, — а больше знать ничего не нужно». Тысячи лет мы мирились с подобного рода заявлениями. А тех, кто говорил: «Э-э... минуточку, по-моему, в этом вопросе мы с вами несведущи, ну-ка, посмотрим...» — травили ядами, выкалывали им глаза и вытягивали кишки через задний проход.
                        Возможно, сегодня мы даже в большей опасности, полагая, что знаем больше, чем в те далекие и мрачные времена религиозных предрассудков (если они действительно ушли в прошлое). Весь багаж знаний, накопленных человечеством, нынче к нашим услугам — стоит лишь щелкнуть мышью. Конечно, такое положение дел просто-таки превосходно, зато опасность теперь в другом: все это запросто может превратиться еще в один священный текст. Что нам по-настоящему нужно, так это сокровищница — но не знания, а невежества. Книга заблуждений, которая не дает ответы, но ставит вопросы. Книга, которая прольет свет — нет, не на очевидные факты, а на темные и сырые уголки нашего невежества. И томик, который вы, друзья, держите сейчас в руках, как раз и есть тот пылающий факел, что поможет нам всем отправиться в путешествие к простоте, понятной даже неучам и глупцам.
                        Читайте ее с умом, ибо велика сила заблуждений.
                        Три слова Алана Дэвиса
                        Так сойдет, Стивен?
                        Вступление Джона Ллойда
                        Бытует мнение, будто человечеству в общем и целом понятно, как устроена Вселенная. Не нам с вами, разумеется, а всяким там «ученым», «профи» и «экспертам». Как ни прискорбно, но это совсем не так. По словам Томаса Эдисона, человека, который вовсе не изобрел электрическую лампочку, «мы ни о чем не знаем и миллионной доли процента».
                        Эта книга для людей, которые знают, что они много чего не знают. В ней — сотни фактов, о коих обычный человек даже не догадывается. Но она не проникает глубже поверхности того, что мы называем невежеством, поскольку невежество, по сути, — это готовые ответы. А вот по-настоящему интересные вопросы — нечто совсем другое. Что есть жизнь? Не знает никто. Что есть свет? Или любовь? Или смех?
                        Есть одна вещь, которую держат в строжайшем секрете и которой не учат в школе: никто не имеет ни малейшего понятия, что же такое гравитация. Или сознание, или электричество, или вирусы. Мы не знаем, почему есть нечто, а не ничто; нам также неизвестно, как и откуда взялась Вселенная. А что еще хуже, 96% этой самой Вселенной, похоже, где-то отсутствует. Мир не сплошной, он состоит из энергии и пустоты. Однако никто не знает, что есть энергия, и все лишь только подозревают, что такой вещи, как пустота, тоже не существует.
                        Мы многого не понимаем, и одна из непонятных штук — это интересность. Любопытно, что у римлян никогда не было термина, означающего «интерес». Никто до сих пор не смог толком определить, что же это за зверь такой — интересность; равно как и объяснить, почему то, чего мы не знаем, гораздо интереснее того, о чем в курсе.
                        Биологи говорят, что человеком движут три основные силы: еда, секс, самосохранение — никакой разницы с животным миром. Мы же говорим, что есть четвертая движущая сила, которая и делает из нас человека, — любознательность. Дикобраза абсолютно не волнует смысл существования. Трубкозубы и мотыльки не устремляют взор в ночное небо и не вопрошают, что это за точки мерцают там. А вот люди — да. Стоит припомнить слова У. Х. Одена: «Те, кто бежит к обезьянам, чтобы объяснить наше поведение, — просто тупые болваны, неспособные отличить собственную задницу от дырки в земле».
                        Человеческий мозг — самый сложный объект во всем космосе. Он способен устанавливать больше связей, чем положительно заряженных частиц во Вселенной. Никто не знает, почему процесс сей так запутан и что нам делать со всей этой поразительной вычислительной мощью.
                        Так что задавайте побольше вопросов.
                        Сколько жен было у Генриха VIII?
                        Мы считаем, что две[1].
                        Или четыре, если вы католик.
                        Четвертый брак Генриха с Анной Киевской был аннулирован. А это совсем не то же самое, что развод. Юридически сей термин означает, что брака как такового вроде как никогда и не существовало.
                        Для отмены брака было два основания. Во-первых, Анна и Генрих никогда не консумировали свой союз, иными словами, пара ни разу не вступила в сексуальную связь. Отказ либо неспособность консумировать брак и по сей день считается законным основанием для его отмены.
                        Кроме того, когда Анна выходила замуж за Генриха, она уже была помолвлена с Франциском, герцогом Лотарингским. А в те времена помолвка являлась юридическим препятствием для вступления в брак с кем-то еще. Второй брак Генриха, с Анной Болейн, Папа Римский провозгласил незаконным, поскольку король все еще состоял в супружеских отношениях со своей первой женой, Екатериной Арагонской.
                        В ответ на это Генрих, будучи главой новорожденной Англиканской церкви, заявил, что недействителен как раз его первый брак — на том простом основании, что мужчине грешно спать с вдовой своего брата. Нравилось это папе или нет, но король ссылался на Ветхий Завет, который искренне считал «Законом Божьим».
                        В зависимости от того, кто вам ближе — папа или король, — остается четыре либо три брака.
                        Свой брак с Анной Болейн Генрих аннулировал незадолго до того, как казнить бедняжку за нарушение супружеской верности. Что, в общем-то, несколько нелогично: если супружества не существовало, Анну вроде как не в чем и обвинять.
                        Точно так же он поступил и со своей пятой женой, Екатериной Говард. Все свидетельствует о том, что она не была верна Генриху ни до, ни во время замужества. На сей раз Генрих даже выпустил специальный указ, согласно которому прелюбодеяние со стороны королевы есть не что иное, как государственная измена. И в очередной раз добился отмены брака.
                        Таким образом, мы имеем дело с четырьмя аннулированными и двумя неоспоримо законными браками.
                        Если не считать последней жены Генриха, Екатерины Парр (которая пережила своего мужа), легче всех отделалась Анна Клевская. После аннулирования их брака Генрих осыпал Анну подарками и даже наградил титулом «возлюбленной сестры». Впоследствии Анна часто бывала при дворе, обмениваясь поварами, рецептами и всякой домашней утварью с человеком, который никогда не был ей мужем.
                        Сколько у вас ноздрей?
                        Чтобы увидеть, что у тебя перед носом, требуется постоянная борьба.
                        Джордж Оруэлл
                        Четыре. Две вы видите, а две — нет.
                        К такому открытию приводят наблюдения за процессом дыхания у рыб. Рыбы получают кислород из воды. У большинства из них две пары ноздрей: передняя — для впуска воды и пара «выхлопных труб» — для ее выпуска.
                        Вопрос: если человечество произошло от рыб, куда девалась вторая пара?
                        Ответ: в глубь головы, превратившись во внутренние ноздри, называемые choannae — в переводе с греческого «дымоходы». Они соединяются с горлом и являются тем самым приспособлением, что позволяет нам дышать через нос.
                        Для этого внутренним ноздрям необходимо каким-то образом обеспечить обратный проток через рот. Невероятно, но факт: совсем недавно китайские и шведские ученые обнаружили рыбу под названием Kenichthys campbelli — ископаемое чудище, возраст которого составляет 395 млн лет, — демонстрирующую данный процесс в его срединной стадии. Между передними зубами рыбы ясно видны два ноздреподобных отверстия.
                        Рыба Kenichthys campbelli — прямой предок земноводных, способных дышать как на суше, так и в воде. Один комплект ноздрей позволял ей лежать на мелководье и поглощать пищу, в то время как второй торчал из воды — почти как у крокодила.
                        Подобные зазоры между зубами можно наблюдать на ранних стадиях развития человеческого эмбриона. Когда эти зазоры не срастаются, получается «волчья пасть». Вот так одна древняя рыбина может разъяснить сразу две давнишние загадки человечества.
                        Новейшие исследования, кстати, говорят о том, что мы используем каждую из двух наших внешних ноздрей, чтобы различать запахи, вдыхая ноздрями разное количество воздуха и тем самым создавая своего рода носовое стерео.
                        Где находится самое сухое место на Земле?
                        В Антарктиде[2]. Некоторые районы этого материка не видели дождя вот уже два миллиона лет.
                        Технически пустыней считается место, где за год выпадает менее 254 мм осадков.
                        В Сахаре, к примеру, их выпадает всего 25 мм. Среднегодовое количество осадков в Антарктиде примерно такое же, однако 2% всей территории континента, известные как Сухие долины, полностью свободны ото льда и снега, и там вообще никогда не идет дождь.
                        Следующее по сухости место на Земле — пустыня Атакама в Чили. В некоторых ее районах дожди не отмечались вот уже 400 лет, а среднегодовое количество осадков составляет крошечную цифру в 0,1 мм. Такие мизерные показатели делают Атакаму второй по сухости мировой пустыней — в 250 раз суше Сахары.
                        Однако Антарктида не только самое сухое место на планете. Одновременно материк претендует на звание самого влажного и самого ветреного. Именно там, в виде льда, находится 70% мировых запасов воды, а ветры достигают скоростей, бьющих все мировые рекорды.
                        Уникальные природные условия в районе Сухих долин вызваны так называемыми катабатическими ветрами (от греческого слова, означающего «дующий вниз»). Они возникают, когда холодный и плотный воздух опускается по склону холма исключительно под воздействием силы тяжести. Такие ветры могут достигать скорости 320 км/ч, полностью испаряя встречающуюся на пути влагу — воду, лед, снег.
                        И хотя Антарктида, в общем-то, является пустыней, наиболее сухие ее части, несколько иронически, именуют оазисами. Они настолько близки к природным условиям Марса, что НАСА проводит там испытания спускаемых космических аппаратов «Викинг».
                        Где находится самая высокая гора?
                        На Марсе.
                        Гигантский вулкан Олимп — или, по-латыни, Olympus Mons — является высочайшей горой Солнечной системы и других известных человечеству частей Вселенной.
                        При высоте 22 км и диаметре 624 км гора Олимп почти в три раза выше Эвереста и настолько широка, что ее основание способно покрыть Аризону или всю территорию Британских островов. Кратер наверху имеет ширину около 72 км и глубину более 3 км — вполне достаточно, чтобы там уместился такой мегаполис, как Лондон.
                        Следует отметить, однако, что Олимп не совсем точно подпадает под определение «гора», как его понимает большинство людей. Вершина Олимпа совершенно плоская — вроде огромного плато посреди моря, из которого выкачали воду, — а склоны никак не назовешь крутыми. Легкий уклон в 1—3 градуса означает, что, совершая восхождение, вы даже не вспотеете.
                        Традиционно мы привыкли оценивать горы по их высоте. Если бы мы оценивали горы по их размеру, было бы совершенно бессмысленно отделять одну гору в хребте от всех остальных. При таком подходе Олимп оказался бы лилипутом в сравнении с Эверестом. Поскольку Эверест — лишь часть гигантской горной системы Гималаи — Каракорам — Гиндукуш — Памир, растянувшейся почти на 2400 км.
                        Как называется самая большая гора в мире?
                        Мауна-Кеа, высочайшая точка на острове Гавайи.
                        Потухший вулкан поднимается над уровнем моря всего на 4206 м, однако, если измерить расстояние от морского дна до вершины, мы получим 10 200 м — приблизительно на 1,2 км больше, чем высота Эвереста.
                        Что касается гор, то на сегодняшний день «самым высоким» условно принято считать расстояние от уровня моря до пика, а «самым большим» — расстояние от подножия горы до ее вершины.
                        Таким образом, Эверест при высоте 8848 м является самой высокой горой в мире, но не самой большой.
                        Одни, к примеру, доказывают, что гора Килиманджаро в Танзании (5895 м) больше Эвереста, поскольку поднимается прямо из Африканской равнины, в то время как Эверест — всего лишь один из множества пиков, увенчивающих огромнейшее подножие Гималаев вкупе еще с тринадцатью высочайшими горами мира.
                        Другие утверждают, что гораздо логичнее измерять расстояние от горного пика до центра Земли.
                        Поскольку Земля — сфера скорее приплюснутая, чем идеально круглая, ее экватор отстоит примерно на 21 км дальше от центра, чем каждый из полюсов.
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>

<!--<pre>
<?php
echo PHP_EOL;

/* $array1 = array(
  "alfa" =>
  2.3227,
  "beta" =>
  1.3454,
  "d" =>
  0.0052596283982766
  );
  $array2 = array(
  "alfa" =>
  2.3227,
  "beta" =>
  1.3454,
  "d" =>
  0.0002596283982766
  );
  var_dump(TaskCheck::thirdTaskCheck($array1, $array2));
 */
/* //тест второго решателя
  $connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
  $obj = new SecondTaskDataGen(5);
  $ar = $connect->getFunctions("functionsecondtask");
  $obj->setFunctions($ar);
  $obj->selectRandomFunction();
  $obj->calculate();
  $array["yData"] = $obj->getXYData();
  $serData = serialize($array);
  $solverObj = new SecondTaskSolver($array["yData"]);
  $solverObj->solver();
  $serRez = serialize($solverObj->getRezult());
  echo PHP_EOL, "Данные:", PHP_EOL;
  foreach ($arTest as $key => $value) {
  echo "$key - $value", PHP_EOL;
  }
  $emp = $solverObj->getEmpFormula();
  $d1 = $solverObj->getD();
  $k = $solverObj->getkAnswer();
  $b = $solverObj->getbAnswer();
  $alfa = $solverObj->getAlfa();
  $beta = $solverObj->getBeta();
  echo "Эмпирическая формула N$emp d=$d1 \nk=$k  b=$b alfa = $alfa beta = $beta\n";
  $emp = $solverObj->getEmpFormula2();
  $d1 = $solverObj->getD2();
  $k = $solverObj->getkAnswer2();
  $b = $solverObj->getbAnswer2();
  $alfa = $solverObj->getAlfa2();
  $beta = $solverObj->getBeta2();
  echo "Эмпирическая формула N$emp d=$d1 \nk=$k  b=$b alfa = $alfa beta = $beta\n";
  var_dump($solverObj->getArrayD());
  echo $solverObj->getFuncDepend($solverObj->getEmpFormula(), $solverObj->getAlfa(), $solverObj->getBeta()), "\n";
  echo $solverObj->getFuncDepend($solverObj->getEmpFormula2(), $solverObj->getAlfa2(), $solverObj->getBeta2()), "\n";
 */

/* $array1 = array(
  "0.24" =>
  3.5208,
  "0.93" =>
  4.2917,
  "1.65" =>
  9.6667
  );
  $array2 = array(
  "0.24" =>
  3.5222,
  "0.93" =>
  4.2917,
  "1.65" =>
  9.6667
  );
  var_dump(TaskCheck::thirdTaskCheck($array1, $array2));
 */
/* //тест третьего решателя
  $connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
  $obj = new ThirdTaskDataGen(2);
  $ar = $connect->getFunctions("functionthirdtask");
  $obj->setFunctions($ar);
  $obj->selectRandomFunction();
  $obj->calculate();
  $data["yData"] = $obj->getYData();
  $data["GoalPoints"] = $obj->getGoalPoints();
  $data["h"] = $obj->getH();
  $data["xStart"] = $obj->getStartX();
  $data["xEnd"] = $obj->getEndX();
  $serData = serialize($data);
  $solver = new ThirdTaskSolver($data["h"], $data["xStart"], $data["xEnd"], $data["yData"], $data["GoalPoints"]);
  $solver->solver();
  $serRez = serialize($solver->getRezult());
 */

/* $array1 = array(
  "0.24" =>
  3.5208,
  "0.93" =>
  4.2917,
  "1.65" =>
  9.6667
  );
  $array2 = array(
  "0.24" =>
  3.5202,
  "0.93" =>
  4.2917,
  "1.65" =>
  9.6667
  );
  var_dump(TaskCheck::firstTaskCheck($array1, $array2));
 */
/* //тест первого решателя  
  $connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
  $obj = new FirstTaskDataGen(2);
  $ar = $connect->getFunctions("functionfirsttask");
  $obj->setFunctions($ar);
  $obj->selectRandomFunction();
  $obj->calculate();
  $data["goalPoints"] = $obj->getGoalPoints();
  $data["xyData"] = $obj->getXYData();
  $serData = serialize($data);
  $solver = new FirstTaskSolver($data["goalPoints"], $data["xyData"]);
  $solver->solver(1);
  $rezult[1] = $solver->getRezult();
  $solver->solver(2);
  $rezult[2] = $solver->getRezult();
  $serRez = serialize($rezult);
 */

/* $array1 = array(
  "4" =>
  array(
  1 =>
  -0.09495,
  2 =>
  -2.74
  ),
  "4.05" =>
  array(
  1 =>
  -0.1062,
  2 =>
  0.78
  ),
  "4.13" =>
  array(
  1 =>
  -0.10955,
  2 =>
  0.17
  )
  );
  $array2 = array(
  "4" =>
  array(
  1 =>
  -0.09495,
  2 =>
  -2.74
  ),
  "4.05" =>
  array(
  1 =>
  -0.1062,
  2 =>
  0.78
  ),
  "4.13" =>
  array(
  1 =>
  -0.10955,
  2 =>
  0.17
  )
  );
  var_dump(TaskCheck::fifthTaskCheck($array1, $array2));
 */
/* $connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
  $obj = new FifthTaskDataGen(1);
  $ar = $connect->getFunctions("functionfifthtask");
  $obj->setFunctions($ar);
  $obj->selectRandomFunction();
  $obj->calculate();
  $i = 0;
  $xst = $obj->getStartX();
  $h = $obj->getH();
  foreach ($obj->getYData() as $key => $x) {
  if ($key % 2 == 0) {
  echo $xst + $h * $i, "\t\t", $x, PHP_EOL;
  $i+=2;
  }
  }
  $data["yData"] = $obj->getYData();
  $data["GoalPoints"] = $obj->getGoalPoints();
  $data["h"] = $obj->getH();
  $data["xStart"] = $obj->getStartX();
  $data["xEnd"] = $obj->getEndX();
  $serData = serialize($data);
  $solver = new FifthTaskSolver($data["h"], $data["xStart"], $data["xEnd"], $data["yData"], $data["GoalPoints"]);
  $solver->solver();
  $serRez = serialize($solver->getRezult());
  return array("data" => $serData, "rezult" => $serRez);
  //echo preg_replace("/unk/", "x", $obj->func), PHP_EOL;
 */

/* $array1 = array(
  "rectangle" =>
  array(
  0 =>
  0.390154,
  1 =>
  0.000252
  ),
  "trapezoidal" =>
  array(
  0 =>
  0.390581,
  1 =>
  0.000504
  ),
  "simpson" =>
  array(
  0 =>
  0.390296,
  1 =>
  1.595E-7
  )
  );
  $array2 = array(
  "rectangle" =>
  array(
  0 =>
  0.391154,
  1 =>
  0.000251
  ),
  "trapezoidal" =>
  array(
  0 =>
  0.390581,
  1 =>
  0.000504
  ),
  "simpson" =>
  array(
  0 =>
  0.390296,
  1 =>
  1.595E-7
  )
  );
  var_dump(TaskCheck::fouthTaskCheck($array1, $array2));
 */
/* //тест четвертого задания
  $connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
  $obj = new FouthTaskDataGen($connect);
  $ar = $connect->getFunctions("FunctionFouthTask");
  $obj->setFunctions($ar);
  $obj->selectRandomFunction();
  $obj->calculate();
  //$func = preg_replace("/unk/", "x", $obj->getFunction());
  //echo $func, PHP_EOL;
  $data["function"] = $obj->getFunction();
  $data["a"] = $obj->getA();
  $data["b"] = $obj->getB();
  $serData = serialize($data);
  $solver = new FourthTaskSolver($data["function"], $data["a"], $data["b"], $obj->getDeviratives());
  $solver->solver(6);
  $rezult[6] = $solver->getRezult();
  $solver = new FourthTaskSolver($data["function"], $data["a"], $data["b"], $obj->getDeviratives());
  $solver->solver(8);
  $rezult[8] = $solver->getRezult();
  $serRez = serialize($rezult);
 */

/* $array1 = array(
  "yRK" =>
  array(
  0 =>
  0.13140354906926,
  1 =>
  0.24937513276614,
  2 =>
  0.35788745346897,
  3 =>
  0.45948737452745,
  4 =>
  0.55588254026061,
  5 =>
  0.64826111046138,
  6 =>
  0.73747498140295,
  7 =>
  0.82415122518621,
  8 =>
  0.90876133816896
  ),
  "nArray" =>
  array(
  0 =>
  3,
  1 =>
  5,
  2 =>
  8,
  3 =>
  10,
  4 =>
  13,
  5 =>
  15,
  6 =>
  18,
  7 =>
  20,
  8 =>
  23
  ),
  "Miln" =>
  array(
  0 =>
  0.13140354906926,
  1 =>
  0.24937513276614,
  2 =>
  0.35788745346897,
  3 =>
  0.45948737452745,
  4 =>
  0.55588147977974,
  5 =>
  0.64826062605789,
  6 =>
  0.7374737451722,
  7 =>
  0.8241506074356,
  8 =>
  0.90876003218057
  )
  );
  $array2 = array(
  "yRK" =>
  array(
  0 =>
  0.13140354906926,
  1 =>
  0.24937513276614,
  2 =>
  0.35788745346897,
  3 =>
  0.45948737452745,
  4 =>
  0.55588254026061,
  5 =>
  0.64826111046138,
  6 =>
  0.73747498140295,
  7 =>
  0.82415122518621,
  8 =>
  0.90876133816896
  ),
  "nArray" =>
  array(
  0 =>
  3,
  1 =>
  5,
  2 =>
  8,
  3 =>
  10,
  4 =>
  13,
  5 =>
  15,
  6 =>
  18,
  7 =>
  20,
  8 =>
  23
  ),
  "Miln" =>
  array(
  0 =>
  0.13140354906926,
  1 =>
  0.24937513276614,
  2 =>
  0.35788745346897,
  3 =>
  0.45948737452745,
  4 =>
  0.55588147977974,
  5 =>
  0.64826062605789,
  6 =>
  0.7374737451722,
  7 =>
  0.8241506074356,
  8 =>
  0.90876003218057
  )
  );
  var_dump(TaskCheck::sixthTaskCheck($array1, $array2));
 */
/* $connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
  $obj = new SixthTaskDataGen(12);
  $ar = $connect->getFunctions("functionsixthtask");
  $obj->setFunctions($ar);
  $obj->selectRandomFunction();
  $obj->calculate($connect);
  $data["function"] = $obj->getFunction();
  $data["x0"] = $obj->getXO();
  $data["h"] = $obj->getH();
  $data["y0"] = $obj->getYO();
  $data["EndValue"] = $obj->getEndValue();
  $serData = serialize($data);
  $solver = new SixthTaskSolver($data["h"], $data["x0"], $data["EndValue"], $data["function"], $data["y0"]);
  $solver->calculate(pow(10, -5));
  $serRez = serialize($solver->getRezult());
 */

/*
  $firstName = "Александр";
  $lastName = "Дар'єв";
  $group = "РІ-101";
  $var = "5";
  $login = "new2";
  $password = "12345";
  var_dump(Registration::createNewUser($firstName, $lastName, $group, $var, $login, $password));
 */
$connect = new SqlConnectNumMet(HOST, USER, PASSWORD, DB);
?>
             
             
            
        </pre>-->